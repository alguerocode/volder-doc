"use strict";(self.webpackChunkvolder_doc=self.webpackChunkvolder_doc||[]).push([[1480],{3905:function(e,r,n){n.d(r,{Zo:function(){return c},kt:function(){return m}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),u=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=u(e.components);return t.createElement(s.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?t.createElement(f,i(i({ref:r},c),{},{components:n})):t.createElement(f,i({ref:r},c))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},726:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var t=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:3},s="Real-World Example",u={unversionedId:"real-world-example",id:"version-2.0.0/real-world-example",title:"Real-World Example",description:"user login validation",source:"@site/versioned_docs/version-2.0.0/real-world-example.md",sourceDirName:".",slug:"/real-world-example",permalink:"/docs/real-world-example",editUrl:"https://github.com/devSupporters/volder-doc/tree/main/versioned_docs/version-2.0.0/real-world-example.md",tags:[],version:"2.0.0",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Contributing to Volder",permalink:"/docs/contributing"}},c=[{value:"user login validation",id:"user-login-validation",children:[],level:3}],d={toc:c};function p(e){var r=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"real-world-example"},"Real-World Example"),(0,o.kt)("h3",{id:"user-login-validation"},"user login validation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { Volder, Email } from 'volder';\n\n\nconst userSchema = new Volder({\n    username: {\n        type: [String, 'username must be in string'],\n        alphanumeric: [true, 'username should only contain letters and numbers'],\n        minLength: [4, 'username at least 4 characters'],\n        maxLength: [16, 'username at most 16 characters'],\n        required: [true, 'username is required'],\n        trim: true\n    },\n    email: {\n        type: [String ,'email must be in string'],\n        pattern: [Email, 'not valid email'],\n        maxLength: [150, 'email be at most 150 characters'],\n        required: [ true,'email is required'],\n        trim: true\n    },\n    password: {\n        type: [String , 'password must be in string'],\n        minLength:[8, 'password should be at least 8 characters'],\n        maxLength: [30, 'password should be at most 30 characters'],\n        required: [ true, 'password is required'],\n        matches: [\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]$\", 'password must contain numbers and letters']\n        \n    }\n})\n\nconst { valid, errors, value } = userSchema.validate(input);\n")))}p.isMDXComponent=!0}}]);