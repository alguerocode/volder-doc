"use strict";(self.webpackChunkvolder_doc=self.webpackChunkvolder_doc||[]).push([[3048],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2123:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:1},s="String",p={unversionedId:"api/string",id:"version-2.0.0/api/string",title:"String",description:"string type configs",source:"@site/versioned_docs/version-2.0.0/api/string.md",sourceDirName:"api",slug:"/api/string",permalink:"/docs/api/string",editUrl:"https://github.com/devSupporters/volder-doc/tree/main/versioned_docs/version-2.0.0/api/string.md",tags:[],version:"2.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Basic APIs",permalink:"/docs/api/basics"},next:{title:"Number",permalink:"/docs/api/number"}},c=[{value:"string type configs",id:"string-type-configs",children:[],level:4},{value:"<code>maxLength: Number</code>",id:"maxlength-number",children:[],level:3},{value:"<code>minLength: Number</code>",id:"minlength-number",children:[],level:3},{value:"<code>required: Boolean</code>",id:"required-boolean",children:[],level:3},{value:"<code>matches: Regex</code>",id:"matches-regex",children:[],level:3},{value:"<code>alphanumeric: Boolean</code>",id:"alphanumeric-boolean",children:[],level:3},{value:"<code>uppercase: Boolean</code>",id:"uppercase-boolean",children:[],level:3},{value:"<code>lowercase: Boolean</code>",id:"lowercase-boolean",children:[],level:3},{value:"<code>whitespace: Boolean</code>",id:"whitespace-boolean",children:[],level:3},{value:"<code>trim: Boolean</code>",id:"trim-boolean",children:[],level:3}],m={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"string"},"String"),(0,i.kt)("h4",{id:"string-type-configs"},"string type configs"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"{ ",(0,i.kt)("strong",{parentName:"li"},"type: String")," }"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#required-boolean"},(0,i.kt)("strong",{parentName:"a"},"required: Boolean"))," described in basics APIs page"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./basics#pattern-functioninput--boolean"},(0,i.kt)("strong",{parentName:"a"},"pattern: Function(input) : Boolean"))," described in basics APIs page"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./basics#transform-functioninput--undefined"},(0,i.kt)("strong",{parentName:"a"},"transform: Function(input) : undefined"))," described in basics APIs page"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#maxlength-number"},(0,i.kt)("strong",{parentName:"a"},"maxLength: Number"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#minlength-number"},(0,i.kt)("strong",{parentName:"a"},"minLength: Number"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#matches-regex"},(0,i.kt)("strong",{parentName:"a"},"matches: Regex"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#alphanumeric-boolean"},(0,i.kt)("strong",{parentName:"a"},"alphanumeric: Boolean"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#uppercase-boolean"},(0,i.kt)("strong",{parentName:"a"},"uppercase: Boolean"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#lowercase-boolean"},(0,i.kt)("strong",{parentName:"a"},"lowercase: Boolean"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#whitespace-boolean"},(0,i.kt)("strong",{parentName:"a"},"whitespace: Boolean"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#trim-boolean"},(0,i.kt)("strong",{parentName:"a"},"trim: Boolean")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"maxlength-number"},(0,i.kt)("inlineCode",{parentName:"h3"},"maxLength: Number")),(0,i.kt)("p",null,"Specifies the maximum number of string length. ",(0,i.kt)("strong",{parentName:"p"},"maxLength accept custom error message"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const username = singleVolder({ type: String, maxLength: 5 });\nusername.valid("hello"); // -> true\n')),(0,i.kt)("h3",{id:"minlength-number"},(0,i.kt)("inlineCode",{parentName:"h3"},"minLength: Number")),(0,i.kt)("p",null,"Specifies the minimum number of string length. ",(0,i.kt)("strong",{parentName:"p"},"minLength accept custom error message"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const username = singleVolder({ type: String, minLength: 4 });\nusername.valid("max"); // -> false\n')),(0,i.kt)("h3",{id:"required-boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"required: Boolean")),(0,i.kt)("p",null,"Marks a key as required which will not allow undefined as value,except that empty strings are also considered 'missing' values if trim set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".\n",(0,i.kt)("strong",{parentName:"p"},"required accept custom error message")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const person = new Volder({\n  name: { type: String, required: true },\n});\nperson.valid({ name: "" }); // -> true\n')),(0,i.kt)("h3",{id:"matches-regex"},(0,i.kt)("inlineCode",{parentName:"h3"},"matches: Regex")),(0,i.kt)("p",null,"Set ",(0,i.kt)("inlineCode",{parentName:"p"},"Regex")," to validate the input string. it accept ",(0,i.kt)("inlineCode",{parentName:"p"},"regular regex")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"string reguex"),"\n",(0,i.kt)("strong",{parentName:"p"},"matches accpet custom error message")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// the regex for string that start with letter\nconst id = singleVolder({ type: String, matches: "^[a-zA-Z]" });\nid.valid("a2342342"); // -> true\n')),(0,i.kt)("h3",{id:"alphanumeric-boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"alphanumeric: Boolean")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"alphanumeric")," accept string that only have letters and numbers.\n",(0,i.kt)("strong",{parentName:"p"},"alphanumeric accpet custom error message")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const username = singleVolder({ type: String, alphanumeric: true });\nusername.valid("welcome.1234"); // -> false\n')),(0,i.kt)("h3",{id:"uppercase-boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"uppercase: Boolean")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"uppercase")," accpet string that not have small letters.\n",(0,i.kt)("strong",{parentName:"p"},"uppercase accpet custom error message")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const username = singleVolder({ type: String, uppercase: true });\nusername.valid("WELCOME.1234"); // -> true\n')),(0,i.kt)("h3",{id:"lowercase-boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"lowercase: Boolean")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"lowercase")," accpet string that not have big letters.",(0,i.kt)("strong",{parentName:"p"},"lowercase accpet custom error message")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const username = singleVolder({ type: String, lowercase: true });\nusername.valid("welcome.1234"); // -> true\n')),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you set ",(0,i.kt)("inlineCode",{parentName:"p"},"lowercase")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"uppercase")," to true at the same time, it will throw an Error"))),(0,i.kt)("h3",{id:"whitespace-boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"whitespace: Boolean")),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"whitespace")," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),",it accpet string that not have whitespace.",(0,i.kt)("strong",{parentName:"p"},"whitespace accpet custom error message")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const username = singleVolder({ type: String, whitespace: false });\nusername.valid("welcome.1234 "); // -> false\n')),(0,i.kt)("h3",{id:"trim-boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"trim: Boolean")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"trim")," = true, it will trim the Entered string."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const username = singleVolder({ type: String, trim: true });\nconst { value } = username.validate("  welcome.1234 ");\n// value = "welcome.1234"\n')))}u.isMDXComponent=!0}}]);