"use strict";(self.webpackChunkvolder_doc=self.webpackChunkvolder_doc||[]).push([[1548],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,k=d["".concat(s,".").concat(c)]||d[c]||u[c]||i;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9499:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return m},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:0},s="Basic APIs",p={unversionedId:"api/basics",id:"api/basics",title:"Basic APIs",description:"Schema Validation Functions",source:"@site/docs/api/basics.md",sourceDirName:"api",slug:"/api/basics",permalink:"/docs/next/api/basics",editUrl:"https://github.com/devSupporters/volder-doc/tree/main/docs/api/basics.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/next/get-started"},next:{title:"String",permalink:"/docs/next/api/string"}},m=[{value:"Schema Validation Functions",id:"schema-validation-functions",children:[],level:4},{value:"General Configs",id:"general-configs",children:[],level:4},{value:"Other Options",id:"other-options",children:[],level:4},{value:"<code>Schema.validate(input: Object) : Object</code>",id:"schemavalidateinput-object--object",children:[],level:3},{value:"<code>Schema.valid( input: Object) : Boolean</code>",id:"schemavalid-input-object--boolean",children:[],level:3},{value:"<code>type: js_type | Function(input) : Boolean</code>",id:"type-js_type--functioninput--boolean",children:[],level:3},{value:"<code>required: Boolean</code>",id:"required-boolean",children:[],level:3},{value:"<code>pattern: Function(input) : Boolean</code>",id:"pattern-functioninput--boolean",children:[],level:3},{value:"<code>transform: Function(input) : undefined</code>",id:"transform-functioninput--undefined",children:[],level:3},{value:"Custom Error Message",id:"custom-error-message",children:[],level:3},{value:"Custom Type",id:"custom-type",children:[],level:3},{value:"Nested Schemas",id:"nested-schemas",children:[],level:3}],u={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basic-apis"},"Basic APIs"),(0,i.kt)("h4",{id:"schema-validation-functions"},"Schema Validation Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#schemavalidateinput-object--object"},(0,i.kt)("strong",{parentName:"a"},"Schema.validate( input: Object) : Object"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#schemavalid-input-object--boolean"},(0,i.kt)("strong",{parentName:"a"},"Schema.valid( input: Object) : Boolean")))),(0,i.kt)("h4",{id:"general-configs"},"General Configs"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#type-js_type--functioninput--boolean"},(0,i.kt)("strong",{parentName:"a"},"type: js_type | Function(input) : Boolean"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#required-boolean"},(0,i.kt)("strong",{parentName:"a"},"required: Boolean"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#pattern-functioninput--boolean"},(0,i.kt)("strong",{parentName:"a"},"pattern: Function(input) : Boolean"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#transform-functioninput--undefined"},(0,i.kt)("strong",{parentName:"a"},"transform: Function(input) : undefined")))),(0,i.kt)("h4",{id:"other-options"},"Other Options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#custom-error-message"},(0,i.kt)("strong",{parentName:"a"},"Custom Error Message"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#custom-type"},(0,i.kt)("strong",{parentName:"a"},"Custom type"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#nested-schemas"},(0,i.kt)("strong",{parentName:"a"},"Nested Schemas")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"schemavalidateinput-object--object"},(0,i.kt)("inlineCode",{parentName:"h3"},"Schema.validate(input: Object) : Object")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"validate")," function accept one argument ",(0,i.kt)("inlineCode",{parentName:"p"},"input"),", input must Object, and return Object with three keys."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"valid: Boolean ")," if input matches the configs you set return ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," otherwise ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"errors: Object")," if some input properties don't match the configs it will return error message with specific property name\nand set valid to ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"value: Object")," return input if valid equal ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," otherwise empty object ",(0,i.kt)("inlineCode",{parentName:"li"},"{}"),", input is new immutable object, or return input with changes if you set transformation configs.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/get-started/#example"},(0,i.kt)("strong",{parentName:"a"},"see an example in get started page"))),(0,i.kt)("h3",{id:"schemavalid-input-object--boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"Schema.valid( input: Object) : Boolean")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"valid")," function accept one argument input. and just return a Boolean ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const nameSchema = new Volder({ name: String });\nnameSchema.valid({ name: 23 }); // return false\n")),(0,i.kt)("h3",{id:"type-js_type--functioninput--boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"type: js_type | Function(input) : Boolean")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"type")," config specify the type of the data, ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," strict equal to one item of this array"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"[String, Number, Boolean, Array, Object, Date, null];\n")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"type")," config must be included, or will throw an Error."))),(0,i.kt)("p",null,"You can add ",(0,i.kt)("inlineCode",{parentName:"p"},"Custom")," type, ",(0,i.kt)("a",{parentName:"p",href:"#custom-type"},(0,i.kt)("strong",{parentName:"a"},"see how custom type work."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const numberSetType = new Volder({ age: { type: Number } });\n// or in other approach\nconst numberSetTypeOnly = new Volder({ age: Number });\n\nnumberSetTypeOnly.valid({ age: 23 }); // return true\n")),(0,i.kt)("h3",{id:"required-boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"required: Boolean")),(0,i.kt)("p",null,"Marks a key as required which will not allow ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," as value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const nameSchema = new Volder( name: { type: Boolean, required: true});\nconst { valid, errors, value } = nameSchema.validate({ }).\n/* valid = false\n   errors = { name: "name is required" }\n   value = {}\n*/\n')),(0,i.kt)("h3",{id:"pattern-functioninput--boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"pattern: Function(input) : Boolean")),(0,i.kt)("p",null,"Pattern accept ",(0,i.kt)("inlineCode",{parentName:"p"},"Function")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"arg1")," is input with specific value you set in schema and return Boolean type ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can use volder supported types in pattern config if type = ",(0,i.kt)("inlineCode",{parentName:"p"},"String")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { Volder, Email } from 'volder';\nconst user = new Volder({ email: { type: String, pattern: Email } })\n")))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"we will use ",(0,i.kt)("inlineCode",{parentName:"p"},"singleVolder")," function. ",(0,i.kt)("a",{parentName:"p",href:"./single-volder"},(0,i.kt)("strong",{parentName:"a"},"see more about singleVolder."))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const peoples = singleVolder({\n    type: Array,\n    pattern: (input) => input.includes('max')\n    arrayOf:[String]\n    });\n\npeoples.valid(['messy', 'ronaldo', 'david']); // ->  false\n")),(0,i.kt)("h3",{id:"transform-functioninput--undefined"},(0,i.kt)("inlineCode",{parentName:"h3"},"transform: Function(input) : undefined")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"transform")," config accpet ",(0,i.kt)("inlineCode",{parentName:"p"},"Function"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arg1")," is input with specific value you set in schema. it will return void."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const name = singleVolder({ type: String, transform: (input) => "MR." + input });\nconst { valid, errors, value } = name.validate("max");\n/* valid = true\n   errors = {}\n   value = "MR.max"\n*/\n')),(0,i.kt)("h3",{id:"custom-error-message"},"Custom Error Message"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Custom Error Message")," is important feature you must use it. custom error change using default error message to use your custom error message."),(0,i.kt)("p",null,"To add a custom error message ",(0,i.kt)("inlineCode",{parentName:"p"},"{ configName: [value, error message]}")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Value must be in index 0 of array and error message must be in index 1 of array."))),(0,i.kt)("p",null,"see the exampe to know how it works."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// without custom error message\nconst person = new Volder({\n  name: { type: String, minLength: 4 },\n  age: Number,\n});\nconst { valid, errors, value } = person.validate({ name: \"me\", age: true });\n/* valid = false\n   errors = {\n       name: 'name must be at least 4 characters',\n       age: 'age should be a number'\n   }\n   value = {}\n*/\n\n// with custom error message\nconst customPerson = new Volder({\n  name: {\n    type: [String, \"only string type\"],\n    minLength: [4, \"at least 4 letters\"],\n  },\n  age: {\n    type:[Number, 'we just accept number type for the age'\n  }\n});\n\nconst { valid, errors, value } = customPerson.validate({ name: 'me', age: false });\n/* valid = false\n   errors = {\n       name: 'at least 4 letters',\n       age: 'we just accept number type for the age'\n   }\n   value = {}\n*/\n")),(0,i.kt)("h3",{id:"custom-type"},"Custom Type"),(0,i.kt)("p",null,"Custom type is other approach to specify the type you like."),(0,i.kt)("p",null,"Custom type is a ",(0,i.kt)("inlineCode",{parentName:"p"},"Function"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arg1")," is an input and function return ",(0,i.kt)("inlineCode",{parentName:"p"},"Boolean (true or false)"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"true")," => the type is correct."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"false")," => the type is uncorrect and will add error message to the error object.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const CustomType = singleVolder({\n  type: (input) => {\n    return typeof input === "string" && input.includes("_");\n  },\n});\n\nCustomType.valid("max_min"); // -> true\n')),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can use other types that volder support in ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," config as a ",(0,i.kt)("inlineCode",{parentName:"p"},"Function"),"."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { singleVolder, Email } from "volder";\n\nconst isEmail = singleVolder({ type: Email });\nisEmail.valid("test@gmail.test"); // -> true\n')),(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"./volder-types"},(0,i.kt)("strong",{parentName:"a"},"see more in other types page."))))),(0,i.kt)("h3",{id:"nested-schemas"},"Nested Schemas"),(0,i.kt)("p",null,"You Can Define Nested volder schemas by:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { Volder } from "volder";\n\nconst personSchema = new Volder({ name: String, age: Number });\n\nconst user = new Volder({\n  email: { type: String, trim: true },\n  person: personSchema,\n});\n\nconst { valid, errors, value } = user.validate({\n  person: { name: "lion", age: 23 },\n  email: "test@test.com   ",\n});\n/* valid = true\n   errors = {}\n   value = {\n     person: { name: "lion", age: 23 },\n     email: "test@test.com",\n    }\n*/\n')))}d.isMDXComponent=!0}}]);