"use strict";(self.webpackChunkvolder_doc=self.webpackChunkvolder_doc||[]).push([[7242],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),m=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=m(e.components);return r.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(t),d=a,b=c["".concat(u,".").concat(d)]||c[d]||s[d]||o;return t?r.createElement(b,i(i({ref:n},p),{},{components:t})):r.createElement(b,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=c;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4316:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return p},default:function(){return c}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={sidebar_position:2},u="Number",m={unversionedId:"api/number",id:"version-2.0.0/api/number",title:"Number",description:"Number type configs",source:"@site/versioned_docs/version-2.0.0/api/number.md",sourceDirName:"api",slug:"/api/number",permalink:"/docs/api/number",editUrl:"https://github.com/devSupporters/volder-doc/tree/main/versioned_docs/version-2.0.0/api/number.md",tags:[],version:"2.0.0",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"String",permalink:"/docs/api/string"},next:{title:"Boolean",permalink:"/docs/api/boolean"}},p=[{value:"Number type configs",id:"number-type-configs",children:[],level:4},{value:"<code>max: Number</code>",id:"max-number",children:[],level:3},{value:"<code>min: Number</code>",id:"min-number",children:[],level:3},{value:"<code>integer: Boolean</code>",id:"integer-boolean",children:[],level:3},{value:"<code>float: Boolean</code>",id:"float-boolean",children:[],level:3},{value:"<code>sing: &#39;positive&#39;|  &#39;negative&#39;</code>",id:"sing-positive--negative",children:[],level:3},{value:"<code>round: Boolean</code>",id:"round-boolean",children:[],level:3},{value:"<code>fixed: Number</code>",id:"fixed-number",children:[],level:3}],s={toc:p};function c(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"number"},"Number"),(0,o.kt)("h4",{id:"number-type-configs"},"Number type configs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"{ ",(0,o.kt)("strong",{parentName:"li"},"type: Number")," }"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./basics#required-boolean"},(0,o.kt)("strong",{parentName:"a"},"required: Boolean"))," described in basics APIs page"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./basics#pattern-functioninput--boolean"},(0,o.kt)("strong",{parentName:"a"},"pattern: Function(input) : Boolean"))," described in basics APIs page"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./basics#transform-functioninput--undefined"},(0,o.kt)("strong",{parentName:"a"},"transform: Function(input) : undefined"))," described in basics APIs page"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#max-number"},(0,o.kt)("strong",{parentName:"a"},"max: Number"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#min-number"},(0,o.kt)("strong",{parentName:"a"},"min: Number"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#integer-boolean"},(0,o.kt)("strong",{parentName:"a"},"integer: Boolean"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#float-boolean"},(0,o.kt)("strong",{parentName:"a"},"float: Boolean"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sing-positive--negative"},(0,o.kt)("strong",{parentName:"a"},"sing: 'positive'|  'negative'"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#round-boolean"},(0,o.kt)("strong",{parentName:"a"},"round: Boolean"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#fixed-number"},(0,o.kt)("strong",{parentName:"a"},"fixed: Number")))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"max-number"},(0,o.kt)("inlineCode",{parentName:"h3"},"max: Number")),(0,o.kt)("p",null,"Specifies the maximum value. ",(0,o.kt)("strong",{parentName:"p"},"max accept custom error message"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const number = singleVolder({ type: Number, max: 9 });\nnumber.valid(10); // -> false\n")),(0,o.kt)("h3",{id:"min-number"},(0,o.kt)("inlineCode",{parentName:"h3"},"min: Number")),(0,o.kt)("p",null,"Specifies the minimum value. ",(0,o.kt)("strong",{parentName:"p"},"min accept custom error message"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const number = singleVolder({ type: Number, min: 4 });\nnumber.valid(3.9); // -> false\n")),(0,o.kt)("h3",{id:"integer-boolean"},(0,o.kt)("inlineCode",{parentName:"h3"},"integer: Boolean")),(0,o.kt)("p",null,"Requires the number to be an integer (no floating point). ",(0,o.kt)("strong",{parentName:"p"},"integer accept custom error message"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const number = singleVolder({ type: Number, integer: true });\nnumber.valid(23.3); // -> false\n")),(0,o.kt)("h3",{id:"float-boolean"},(0,o.kt)("inlineCode",{parentName:"h3"},"float: Boolean")),(0,o.kt)("p",null,"Requires the number to be an float (floating point). ",(0,o.kt)("strong",{parentName:"p"},"float accept custom error message"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const number = singleVolder({ type: Number, float: true });\nnumber.valid(32); // -> false\n")),(0,o.kt)("h3",{id:"sing-positive--negative"},(0,o.kt)("inlineCode",{parentName:"h3"},"sing: 'positive'|  'negative'")),(0,o.kt)("p",null,"Requires the number to be negative or positive where: sign - one of 'negative' or 'positive'. ",(0,o.kt)("strong",{parentName:"p"},"sign accept custom error message"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const number = singleVolder({ type: Number, sign: 'positive' });\nnumber.valid(-23); // -> false\n")),(0,o.kt)("h3",{id:"round-boolean"},(0,o.kt)("inlineCode",{parentName:"h3"},"round: Boolean")),(0,o.kt)("p",null,"Round the number to the nearest integer."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const number = singleVolder({ type: Number, round: true });\nconst { value } = number.validate(2.6);\n// value = 3;\n")),(0,o.kt)("h3",{id:"fixed-number"},(0,o.kt)("inlineCode",{parentName:"h3"},"fixed: Number")),(0,o.kt)("p",null,"Transform the number to be fixed decimal number. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const number = singleVolder({ type: Number, fixed: 2 });\nconst { value } = number.validate(1.2423523); \n// value = 1.24;\n")))}c.isMDXComponent=!0}}]);